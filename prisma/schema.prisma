// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}


datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String    @id @default(uuid())
  username           String    @unique
  password           String
  isAdmin            Boolean   @default(false)
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  monthlyUsage       BigInt    @default(0) // Storage usage in bytes
  nextQuotaResetDate DateTime  // Date when the user's quota will be reset next
  files              File[]
  usageHistory       UsageHistory[]
}

model File {
  id              String    @id @default(uuid())
  name            String
  originalName    String
  size            BigInt    // File size in bytes
  mimeType        String?
  cloudProvider   String    // "aws" or "gcp"
  cloudPath       String    // Path in cloud storage
  uploadedAt      DateTime  @default(now())
  userId          String
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model UsageHistory {
  id              String    @id @default(uuid())
  userId          String
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  date            DateTime  @default(now())
  usageBytes      BigInt    // Usage for the specific date
}
